#!/bin/bash

#*****************************************************************
#
# Organization: Lawrence Livermore National Lab (LLNL)
#  Directorate: Computation
#   Department: Computing Applications and Research
#     Division: S&T Global Security
#       Matrix: Atmospheric, Earth and Energy Division
#      Program: PCMDI
#      Project: Earth Systems Grid
# First Author: Gavin M. Bell (gavin@llnl.gov)
#
#  Description:
#
#  Simple script for pushing files from the repsitory to the website
#  for general consumption.  The motivation here was to not have
#  people pummel our source code repository getting these files, which
#  is slow and not what a repo is for.  Web servers are made exactly
#  for this task, so put the necessary files on one, right? :-)
#
#  This file reads a manifest file by default postlist.manif
# 
# The format of the manifest file is pseudo "ini" like.  You can
# specifiy the destination directory extending from the esg_dist_url
# value by putting that value on a single line in []s.  files must be
# listed with either absolute path or directory relative to the
# execution of the "post" script.  There may be a second value after the
# file location that determines where this particular entry is put on
# the server (after the esg_dist_url value).  If no destination
# directory value is set the default is esg_node set at the top of the
# script.
#
# NOTE: Because we use rsync -c files will not be pushed if they have
# not changed since the last push! :-) Pretty damn sweet!
# 
# Ex: 
# -----
# 
# #lines starting with "#" are ignored :-)
# /path/file1
# 
# [server_dir]
# 
# path/file2
# path/file3 other_server_dir
# ../path/file4
# 
# [another_path/foo]
# 
# path/file4
# 
# -----
# file1 will go to ${esg_dist_url}/esg_node (the default server dir)
# file2 will go to ${esg_dist_url}/server_dir
# file3 will to go ${esg_dist_url}/other_server_dir
# file4 will go to ${esg_dist_url}/server_dir
# file5 will go to ${esg_dist_url}/another_path/foo
# 
#
#Misc:
# the sed pattern for how we write our version with git and branch is...
# sed 's/script_version="v[0-9]\+\.[0-9]\+\.[0-9]\+\(-[0-9]\+-g[0-9a-z]\+\)\?\(-[a-zA-Z].*\)\?"$//'
# (may come in handy and this took me too long to get right to just dash it weh so, to raahtid!
#*****************************************************************

#uses: egrep, rsync (and thus ssh)

__on_mac=$(uname -a | grep -q Darwin && echo 1 || echo 0)
__md5sum_() {
    ((__on_mac)) && md5 $@ | sed -n 's/MD5 (\([^)]*\))[ ]*=[ ]*\(.*\)/\2 \1/p' || md5sum $@
}

devel=${devel:-0}
verbose=${verbose:-0}
debug=${debug:-0}
noop=${noop:-0}

while [ -n "$1" ]; do 
    case $1 in
        --devel)
            devel=1
            ;;
        --verbose)
            verbose=1
            ;;
        --debug)
            debug=1
            ;;
        --noop | --dry-run)
            noop=1
            ;;
        *)
	    printf "\n ERROR: unknown switch \"$1\" \n\n" && exit 1
	    ;;
    esac
    shift
done

#-----
# double check
my_current_branch=$(git status | sed -n '1 s/.*On branch[ ]*\(.*$\)/\1/p')
if echo $my_current_branch | grep devel >& /dev/null; then
    #I am on a devel branch...
    #Make sure that devel is turned on
    if ((devel != 1)); then
        read -t 5 -p "You are on branch [${my_current_branch}] and attempting to post to main distribution location, okay? [y/N]: " answer
        [ -z "${answer}" ] && answer="n"
        answer=$(echo ${answer} | tr 'A-Z' 'a-z')
        if [ "$answer" != "y" ]; then
            echo
            echo "NOTE: use the \"--devel\" flag or export devel=1 in order to post to development area."
            echo
            exit 1
        fi
    fi
fi
#-----

((devel)) && echo "Pushing to development area..."
((verbose)) && echo "Verbose is ON"
((noop)) &&  echo "Noop is ON"

manifest_file=${manifest_file:-$0.manif}
esg_dist_url="rainbow.llnl.gov:/pcmdi_web/dist$( ((devel == 1)) && echo "/devel" || echo "")"
current_dir=${current_dir:="esgf-installer"}
xfer_user=${xfer_user:-""}

[ -n "${xfer_user}" ] && xfer_user+="@" && echo "[${xfer_user}${esg_dist_url}]"

fail=0
good=0
total=0

script_version=$(git describe)-${my_current_branch}
script_release=$(git tag | sed -ne 's/\(v[0-9]*\.[0-9]*\.[0-9]*\)-\([a-zA-Z0-9_-]*\)-release.*$/\1 \2/p' | sort -n -k1,1 | awk '{print $2}' | tail -n 1)

while read file dest_dir; do
    
    #skip comment lines (#) and blank lines...
    if [ -n "$(echo $file | grep ^#)" ] || [ -z "$file" ]; then
    	continue
    fi
    
    t=$(echo $file | egrep "[[](.*)[]]" | awk '{print substr($1,2,length($1)-2)}')
    if [ -n "$t" ]; then
	current_dir=$t
	continue
    fi


    if [ ! -e $file ]; then
	echo -n "x"
	((verbose)) && echo " [FAIL] No Such File $file"
	((++total))
	((++fail))
	continue
    fi

    dest_dir=${dest_dir:-"${current_dir}"}
    #echo "[$file] >> [$dest_dir]"
    tmp_file=${file}_${RANDOM}
    ((verbose)) && echo -n "pushing $file ---> ${xfer_user}${esg_dist_url}/${dest_dir} " || echo -n "*"
    #NOTE: I am sure there is a cleaner way to do this two step replacement that does not require two tmp files!!!
    #      In a cross platform way (unix will take "-i" alone, apple wants "-i ''")  :-(
    ((debug)) && echo "sed 's#\(script_version=\)"\(.*\)".*$#\1"'${script_version}'"#' ${file} > ${tmp_file}_"
    sed 's#\(script_version=\)"\(.*\)".*$#\1"'${script_version}'"#' ${file} > ${tmp_file}_
    ((debug)) && echo "sed 's#\(script_release=\)"\(.*\)".*$#\1"'${script_release}'"#' ${tmp_file}_ > ${tmp_file}"
    sed 's#\(script_release=\)"\(.*\)".*$#\1"'${script_release}'"#' ${tmp_file}_ > ${tmp_file}
    ((!noop))  && __md5sum_ ${tmp_file} | sed -n 's/_[0-9]*//p' > ${file}.md5
    ((!noop))  && rsync -c ${file}.md5 ${xfer_user}${esg_dist_url}/${dest_dir}/${file##*/}.md5 >& /dev/null
    echo -n "-"
    ((!noop))  && rsync -c ${tmp_file} ${xfer_user}${esg_dist_url}/${dest_dir}/${file##*/} >& /dev/null
    if [ $? != 0 ]; then
	((verbose)) && echo "[FAIL]"
	((++fail))
    else
	((verbose)) && echo "[OK]" 
	((++good))
    fi
    ((++total))
    rm ${tmp_file}{,_}
done < $manifest_file

echo 
echo total=${total} good=${good} fail=${fail}
echo "done."
unset __on_mac
exit 0
